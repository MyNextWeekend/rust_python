name: 自动构建
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-python-mac-win:
    name: 构建 ${{ matrix.platform || matrix.os }} (${{ matrix.target }} - ${{ matrix.manylinux || 'auto' }})
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
        target: [x86_64, aarch64]
        manylinux: [auto]
        include:
          - os: ubuntu
            platform: linux
            pypy: true
          - os: macos
            target: x86_64
            pypy: true
          - os: macos
            target: aarch64
            pypy: true
          - os: windows
            ls: dir
          - os: windows
            ls: dir
            target: i686
            python-architecture: x86
          - os: windows
            ls: dir
            target: aarch64
            interpreter: 3.11 3.12
          - os: ubuntu
            platform: linux
            target: i686
          - os: ubuntu
            platform: linux
            target: armv7
          - os: ubuntu
            platform: linux
            target: ppc64le
          - os: ubuntu
            platform: linux
            target: s390x
          # musllinux
          - os: ubuntu
            platform: linux
            target: x86_64
            manylinux: musllinux_1_1
          - os: ubuntu
            platform: linux
            target: aarch64
            manylinux: musllinux_1_1
    steps:
      - name: 读取仓库代码
        uses: actions/checkout@v4

      - name: 安装rust
        uses: dtolnay/rust-toolchain@stable

      - id: cache-rust
        name: rust缓存
        uses: Swatinem/rust-cache@v2

      - run: cargo install rustfilt coverage-prepare
        if: steps.cache-rust.outputs.cache-hit != 'true'

      - name: 添加LLVM工具
        run: rustup component add llvm-tools-preview

      - name: 安装uv环境
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          python-version: ${{ matrix.python-version }}

      - name: 构建 wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: ${{ matrix.manylinux || 'auto' }}
          # NOTE: gha setup-python doesn't support 3.13t yet
          #       (https://github.com/actions/setup-python/pull/973)
          # args: --release --out dist --interpreter ${{ matrix.interpreter || '3.9 3.10 3.11 3.12 3.13 3.13t' }}
          args: --release --out dist --interpreter ${{ matrix.interpreter || '3.9 3.10 3.11 3.12 3.13' }}

      - name: 构建 pypy wheels
        if: ${{ matrix.pypy }}
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: ${{ matrix.manylinux || 'auto' }}
          args: --release --out dist --interpreter pypy3.9 pypy3.10

      - run: ${{ matrix.ls || 'ls -lh' }} dist/

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: pypi_files_${{ matrix.os }}_${{ matrix.target }}_${{ matrix.interpreter || 'all' }}_${{ matrix.manylinux }}
          path: dist

  merge-build-artifacts:
    runs-on: ubuntu-latest
    needs:
      - build-python-mac-win
      # - build-macos-x86_64
      # - build-manylinux-x86_64
      # - build-manylinux-aarch64
      # - build-sdist
    steps:
      - name: 聚合构建产物
        uses: actions/upload-artifact/merge@v4
        with:
          name: dist
          pattern: pypi_files-*
