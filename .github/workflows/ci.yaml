name: 自动构建
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-python-wheels:
    name: 构建 ${{ matrix.platform || matrix.os }} (${{ matrix.target }} - ${{ matrix.manylinux || 'auto' }})
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
        target: [x86_64, aarch64]
        manylinux: [auto]
        include:
          - os: ubuntu
            platform: linux
          - os: windows
            ls: dir
          - os: windows
            ls: dir
            target: i686
            python-architecture: x86
            interpreter: 3.8 3.9 3.10 3.11 3.12 3.13
          - os: windows
            ls: dir
            target: aarch64
            interpreter: 3.11 3.12 3.13
          - os: ubuntu
            platform: linux
            target: i686
          - os: ubuntu
            platform: linux
            target: aarch64
          - os: ubuntu
            platform: linux
            target: armv7
            interpreter: 3.8 3.9 3.10 3.11 3.12 3.13
            # musllinux
          - os: ubuntu
            platform: linux
            target: x86_64
            manylinux: musllinux_1_1
          - os: ubuntu
            platform: linux
            target: aarch64
            manylinux: musllinux_1_1
          - os: ubuntu
            platform: linux
            target: ppc64le
            interpreter: 3.8 3.9 3.10 3.11 3.12 3.13
          - os: ubuntu
            platform: linux
            target: s390x
            interpreter: 3.8 3.9 3.10 3.11 3.12 3.13
        exclude:
          # Windows on arm64 only supports Python 3.11+
          - os: windows
            target: aarch64

    steps:
      - name: 读取仓库代码
        uses: actions/checkout@v4

      - name: 初始化python版本
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          architecture: ${{ matrix.python-architecture || 'x64' }}

      - name: 安装 twine 工具
        run: pip install -U twine

      - name: build sdist
        if: ${{ matrix.os == 'ubuntu' && matrix.target == 'x86_64' && matrix.manylinux == 'auto' }}
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
          rust-toolchain: stable

      - name: 构建 wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: ${{ matrix.manylinux || 'auto' }}
          # --strip 剥离库以获得最小文件大小
          # --release 仅在发布时使用
          # --out dist 指定输出目录
          # --interpreter 仅在发布时使用
          args: --release --strip --out dist --interpreter ${{ matrix.interpreter || '3.8 3.9 3.10 3.11 3.12 pypy3.9 pypy3.10' }}
          rust-toolchain: stable

      - name: 获取构建产物
        run: ${{ matrix.ls || 'ls -lh' }} dist/

      - name: twine 工具检查构建产物
        run: twine check --strict dist/*

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.platform || matrix.os }}-${{ matrix.target }}-${{ matrix.manylinux || 'auto' }}
          path: dist

  merge-build-artifacts:
    runs-on: ubuntu-latest
    needs:
      - build-python-wheels
    steps:
      - name: 聚合构建产物
        uses: actions/upload-artifact/merge@v4
        with:
          name: dist
          pattern: pypi_files-*
